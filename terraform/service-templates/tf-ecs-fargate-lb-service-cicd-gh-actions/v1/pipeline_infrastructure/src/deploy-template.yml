#################################################
## Generated by an AWS Proton service template
#################################################

name: Deploy using Proton
on:
  push:
    branches: [ "${branch_name}" ]

env:
  AWS_REGION: ${region}
  ECR_REPOSITORY: ${ecr_repo}
  PROTON_SERVICE: ${proton_service}

permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    # let's add a new step in ci/cd pipelines that we
    # want all development teams to start doing
    - name: run security tool
      run: echo "here we are running a new security tool to scan our code"

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Assume AWS IAM Role
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-region: ${region}
        role-to-assume: ${role}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build
      env:
        ECR_REGISTRY: $${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: $${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Generate new Proton service spec for deployment
      run: |
        aws proton get-service --name $${PROTON_SERVICE} | jq -r .service.spec > spec.yml

        # replace newly built image in yaml and deploy it
        wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 && chmod +x /usr/local/bin/yq
        yq ".instances[0].spec.image = \"$${{ steps.build.outputs.image }}\"" spec.yml > $${HOME}/service.yml

%{ for instance in proton_service_instances ~}
    - name: Deploy container image to ${instance.name} using Proton pipeline
      run: |
        aws proton update-service-instance \
          --service-name $${PROTON_SERVICE} \
          --name ${instance.name} \
          --deployment-type CURRENT_VERSION \
          --spec file://$${HOME}/service.yml

        aws proton wait service-instance-deployed \
          --service-name $${PROTON_SERVICE} \
          --name ${instance.name}

%{ endfor ~}

