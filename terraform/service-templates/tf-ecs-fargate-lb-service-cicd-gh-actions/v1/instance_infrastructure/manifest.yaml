infrastructure:
  templates:
    - rendering_engine: codebuild
      settings:
        image: aws/codebuild/standard:6.0
        runtimes:
          golang: 1.18
        env:
          variables:
            TF_VERSION: 1.3.9

        provision:
          # get proton input parameters
          - export IN=$(cat proton-inputs.json) && echo ${IN}
          - export PROTON_ENV=$(echo $IN | jq '.environment.name' -r)
          - export PROTON_SVC=$(echo $IN | jq '.service.name' -r)
          - export PROTON_SVC_INSTANCE=$(echo $IN | jq '.service_instance.name' -r)
          - export TF_STATE_BUCKET=$(echo $IN | jq '.environment.outputs.tf_state_bucket' -r)
          - export KEY=${PROTON_SVC}.${PROTON_SVC_INSTANCE}.tfstate

          # install terraform cli
          - echo "Installing Terraform CLI ${TF_VERSION}"
          - chmod +x ./install-terraform.sh && ./install-terraform.sh ${TF_VERSION}

          # provision vpc/ecs resources, storing state in the environment s3 bucket
          - echo "terraform remote state = s3://${TF_STATE_BUCKET}/${KEY}"
          - terraform init -backend-config="bucket=${TF_STATE_BUCKET}" -backend-config="key=${KEY}"
          - terraform apply -var-file=proton-inputs.json -auto-approve

          # pass terraform output to proton
          - chmod +x ./output.sh && ./output.sh

        deprovision:
          # get proton input parameters
          - export IN=$(cat proton-inputs.json) && echo ${IN}
          - export PROTON_ENV=$(echo $IN | jq '.environment.name' -r)
          - export PROTON_SVC=$(echo $IN | jq '.service.name' -r)
          - export PROTON_SVC_INSTANCE=$(echo $IN | jq '.service_instance.name' -r)
          - export TF_STATE_BUCKET=$(echo $IN | jq '.environment.outputs.tf_state_bucket' -r)
          - export KEY=${PROTON_SVC}.${PROTON_SVC_INSTANCE}.tfstate

          # install terraform cli
          - echo "Installing Terraform CLI ${TF_VERSION}"
          - chmod +x ./install-terraform.sh && ./install-terraform.sh ${TF_VERSION}

          # destroy environment
          - echo "terraform remote state = s3://${TF_STATE_BUCKET}/${KEY}"
          - terraform init -backend-config="bucket=${TF_STATE_BUCKET}" -backend-config="key=${KEY}"
          - terraform destroy -var-file=proton-inputs.json -auto-approve
